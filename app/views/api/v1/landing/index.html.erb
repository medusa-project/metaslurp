<div class="container-fluid">
  <div class="row justify-content-end">
    <div class="col-5" style="text-align: right">
      <%= link_to 'Control Panel', admin_root_path %> |
      <%= link_to 'Public Website', root_path %>
    </div>
  </div>
</div>

<h1><%= Option::string(Option::Keys::WEBSITE_NAME) %>
  HTTP API <small>version 1</small></h1>

<section id="table-of-contents">
  <ul>
    <li><a href="#basic-info">Basic Information</a></li>
    <li><a href="#crash-course">Harvesting Crash Course</a></li>
    <li>
      Harvests
      <ul>
        <li><a href="#start-harvest">Start a harvest</a></li>
        <li><a href="#update-harvest">Update a harvest</a></li>
      </ul>
    </li>
    <li>
      Items
      <ul>
        <li><a href="#create-item">Create or update an item</a></li>
      </ul>
    </li>
    <li>
      Elements
      <ul>
        <li><a href="#list-elements">List elements</a></li>
      </ul>
    </li>
  </ul>
</section>

<section id="basic-info">
  <h2>Basic Information</h2>
  <ul>
    <li>All request and response entities should be in JSON format and
      accompanied by a <code>Content-Type: application/json</code> header.</li>
    <li>Unrecognized keys in JSON request entities will be silently
      discarded.</li>
    <li>All requests require HTTP Basic authentication. The username is that
      of the <%= link_to 'Control Panel user', admin_users_path %> and the
      secret is their API key.</li>
    <li>In addition to the documented response statuses, clients should be
      prepared to handle 400- and 500-level errors in response to any request.</li>
  </ul>
</section>

<section id="crash-course">
  <h2>Harvesting Crash Course</h2>
  <ol>
    <li><a href="#start-harvest">Start a new harvest</a> and note its key and
      URI.</li>
    <li><a href="#create-item">Ingest some items</a> using the harvest key
      obtained above.</li>
    <li>Regularly <a href="#update-harvest">update the harvest</a> with
      current progress.</li>
    <li>When the harvest is complete, successfully or not,
      <a href="#update-harvest">close it out</a> with an appropriate status.
      If there were any errors, communicate them in the message.</li>
  </ol>
</section>

<h2>Harvests</h2>

<h3 id="start-harvest">Start a harvest</h3>

<table class="table">
  <tr>
    <td>Request Method</td>
    <td><code>POST</code></td>
  </tr>
  <tr>
    <td>URI Path</td>
    <td><code>/api/<%= @version_path_component %>/harvests</code></td>
  </tr>
  <tr>
    <td>Query Arguments</td>
    <td></td>
  </tr>
  <tr>
    <td>Request Content Type</td>
    <td><code>application/json</code></td>
  </tr>
  <tr>
    <td>Request Entity</td>
    <td><code class="code-block">{
    "service_key": "service-key"
}</code>

      <table class="table table-condensed">
        <tr>
          <th></th>
          <th>Required</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><code>service_key</code></td>
          <td>Yes</td>
          <td>Must be one of the available
            <%= link_to 'content service', admin_content_services_path %> keys.
          </td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td>Response Status</td>
    <td><code>201 Created</code></td>
  </tr>
  <tr>
    <td>Response Content Type</td>
    <td><code>application/json</code></td>
  </tr>
  <tr>
    <td>Response Entity</td>
    <td><code class="code-block">{
    "path": "/api/<%= @version_path_component %>/harvests/harvest-key",
    "key": "harvest-key"
}</code></td>
  </tr>
</table>

<h3 id="update-harvest">Update a harvest</h3>

<table class="table">
  <tr>
    <td>Request Method</td>
    <td><code>PATCH</code></td>
  </tr>
  <tr>
    <td>URI Path</td>
    <td><code>/api/<%= @version_path_component %>/harvests/:key</code></td>
  </tr>
  <tr>
    <td>Query Arguments</td>
    <td></td>
  </tr>
  <tr>
    <td>Request Content Type</td>
    <td><code>application/json</code></td>
  </tr>
  <tr>
    <td>Request Entity</td>
    <td><code class="code-block">{
    "status": 1,
    "num_items", 750,
    "num_succeeded": 500,
    "num_failed" 2,
    "messages": [
        "This item errored",
        "And so did this one"
    ]
}</code>

      <table class="table table-condensed">
        <tr>
          <th></th>
          <th>Required</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><code>num_items</code></td>
          <td>Yes</td>
          <td>Total number of items to be harvested.</td>
        </tr>
        <tr>
          <td><code>num_succeeded</code></td>
          <td>Yes</td>
          <td>Number of items harvested successfully.</td>
        </tr>
        <tr>
          <td><code>num_failed</code></td>
          <td>Yes</td>
          <td>Number of items that failed to harvest.</td>
        </tr>
        <tr>
          <td><code>status</code></td>
          <td>No</td>
          <td>One of the following:
            <ul>
              <% Harvest::Status::all.sort.drop(1).each do |status| %>
                <li><code><%= status %></code> (<%= Harvest::Status::to_s(status) %>)</li>
              <% end %>
            </ul>
          </td>
        </tr>
        <tr>
          <td><code>messages</code></td>
          <td>No</td>
          <td>Array of arbitrary messages to send back to the sink.</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td>Response Status</td>
    <td><code>204 No Content</code></td>
  </tr>
  <tr>
    <td>Response Content Type</td>
    <td></td>
  </tr>
  <tr>
    <td>Response Entity</td>
    <td></td>
  </tr>
</table>

<h2>Items</h2>

<h3 id="create-item">Create or update an item</h3>

<table class="table">
  <tr>
    <td>Request Method</td>
    <td><code>PUT</code></td>
  </tr>
  <tr>
    <td>URI Path</td>
    <td><code>/api/<%= @version_path_component %>/items/:id</code></td>
  </tr>
  <tr>
    <td>Query Arguments</td>
    <td></td>
  </tr>
  <tr>
    <td>Request Content Type</td>
    <td><code>application/json</code></td>
  </tr>
  <tr>
    <td>Request Entity</td>
    <td><code class="code-block">{
    "variant": "Item",
    "id": "local-item-id",
    "parent_id": null,
    "harvest_key": "harvest-key",
    "media_type": "image/jp2",
    "source_id": "some-item",
    "source_uri": "http://example.org/some-item",
    "full_text": "The quick brown fox jumped over the lazy dog."
    "elements" : [
        {
            "name": "some-element-name",
            "value": "some element value"
        },
        {
            "name": "some-element-name",
            "value": "some element value"
        }
    ]
    "images": [
        {
            "master": true,
            "crop": "full",
            "size": "full",
            "uri": "http://example.org/image-master.tif"
        },
        {
            "master": false,
            "crop": "full",
            "size": 128,
            "uri": "http://example.org/image-full-128.jpg"
        },
        {
            "master": false,
            "crop": "square",
            "size": 256,
            "uri": "http://example.org/image-square-256.jpg"
        }
    ]
}</code>

      <table class="table table-condensed">
        <tr>
          <th></th>
          <th>Required</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><code>variant</code></td>
          <td>Yes</td>
          <td>
            One of the following:
            <%=raw Item::Variants::all.sort.map{ |v| "<code>#{v}</code>" }.join(', ') %>
          </td>
        </tr>
        <tr>
          <td><code>elements</code></td>
          <td>No</td>
          <td>Element names can be mapped to local names via the
            <%= link_to 'Control Panel', admin_root_path %>.
            <p class="text-info">
              <i class="fas fa-info-circle"></i>
              Elements that map to date-type local elements will be parsed and
              stored as dates. If the parsing fails, they will be silently discarded.
              For best compatibility, use the full ISO-8601 date format.
            </p>
          </td>
        </tr>
        <tr>
          <td><code>images</code></td>
          <td>No</td>
          <td>Array of image objects with <code>crop</code>, <code>size</code>,
            <code>uri</code>, and <code>master</code> keys.
            <ul>
              <li>Crops may be <code>full</code> or <code>square</code>.</li>
              <li>Sizes should be powers of 2 in the range of
                2<sup><%= Image::MIN_POWER_OF_2_SIZE %></sup>
                through 2<sup><%= Image::MAX_POWER_OF_2_SIZE %></sup>. There
                may also be a <code>full</code> size.</li>
              <li><code>uri</code> should point to an image that is suitable for
                web delivery without further processing.</li>
              <li>There may be one <code>master</code> image in the array.
                This one is full-size and full-crop and not necessarily
                web-ready.</li>
            </ul>
          </td>
        </tr>
        <tr>
          <td><code>full_text</code></td>
          <td>No</td>
          <td>Free-form string of unlimited length.</td>
        </tr>
        <tr>
          <td><code>harvest_key</code></td>
          <td>Yes</td>
          <td>Key of a <a href="#start-harvest">started harvest</a>.</td>
        </tr>
        <tr>
          <td><code>id</code></td>
          <td>Yes</td>
          <td>Must be unique across all items in the harvesting application,
            and should be stable from harvest to harvest.
            <strong>Must not contain slashes (/) or periods (.).</strong></td>
        </tr>
        <tr>
          <td><code>parent_id</code></td>
          <td>No</td>
          <td>ID of a parent item in the harvesting application. Must match
          the parent item's <code>id</code>.</td>
        </tr>
        <tr>
          <td><code>media_type</code></td>
          <td>No</td>
          <td>A recognized media a.k.a. MIME type. Should be a specific type and
            not something generic like <code>application/octet-stream</code>
            (unless the represented data really is an unspecified binary format).
            May be omitted if unknown or not applicable.
          </td>
        </tr>
        <tr>
          <td><code>source_id</code></td>
          <td>Yes</td>
          <td>Identifier of the item in the source service.</td>
        </tr>
        <tr>
          <td><code>source_uri</code></td>
          <td>Yes</td>
          <td>URI of the item's main public human-consumable representation.
            If it has an <code>example.org</code> domain, the item will be
            silently discarded.</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td>Response Status</td>
    <td>
      <dl>
        <dt><code>204 No Content</code></dt>
        <dd>The request succeeded.</dd>
        <dt><code>480 Harvest Ended</code></dt>
        <dd>The harvest identified by the given key has ended and is no longer
          available for use.</dd>
        <dt><code>481 Harvest Aborted</code></dt>
        <dd>The harvest identified by the given key has been aborted and is no
          longer available for use.</dd>
      </dl>
    </td>
  </tr>
  <tr>
    <td>Response Content Type</td>
    <td></td>
  </tr>
  <tr>
    <td>Response Entity</td>
    <td></td>
  </tr>
</table>

<h2>Elements</h2>

<h3 id="list-elements">List elements</h3>

<table class="table">
  <tr>
    <td>Request Method</td>
    <td><code>GET</code></td>
  </tr>
  <tr>
    <td>URI Path</td>
    <td><code>/api/<%= @version_path_component %>/elements</code></td>
  </tr>
  <tr>
    <td>Query Arguments</td>
    <td>
      <table class="table table-condensed">
        <tr>
          <th></th>
          <th>Required</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><code>start</code></td>
          <td>No</td>
          <td>Results cursor position</td>
        </tr>
        <tr>
          <td><code>limit</code></td>
          <td>No</td>
          <td>Result window size</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td>Request Content Type</td>
    <td></td>
  </tr>
  <tr>
    <td>Request Entity</td>
    <td></td>
  </tr>
  <tr>
    <td>Response Status</td>
    <td><code>200 OK</code></td>
  </tr>
  <tr>
    <td>Response Content Type</td>
    <td><code>application/json</code></td>
  </tr>
  <tr>
    <td>Response Entity</td>
    <td>JSON object</td>
  </tr>
</table>
