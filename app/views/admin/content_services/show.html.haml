- provide :title, @content_service
- provide :body_id, 'dl-admin-content-service'
- provide :active_nav, 'content-services'

= breadcrumb({ label: 'Home', url: admin_root_path },              |
  { label: 'Content Services', url: admin_content_services_path }, |
  { label: @content_service.name })                                |

- if current_user.medusa_admin?
  .btn-group.float-right{role: "group"}
    .btn-group{role: "group"}
      %button#btnGroupDrop1.btn.btn-light.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", type: "button"}
        Items
      .dropdown-menu{"aria-labelledby" => "btnGroupDrop1"}
        %a.dropdown-item{"data-target" => "#dl-harvest-modal", "data-toggle" => "modal", href: "#"}
          %i.fas.fa-sync
          Harvest
        = link_to admin_content_service_purge_path(@content_service),
          class: 'dropdown-item', method: 'post',
          data: { confirm: 'Are you sure you want to purge all items from this content service? This cannot be undone.' } do
          %i.fas.fa-trash
          Purge
    = link_to(edit_admin_content_service_path(@content_service),
              class: 'btn btn-light') do
      %i.fas.fa-edit
      Edit
    -# the test service can't be deleted as it's required for metaslurper tests
    = link_to(admin_content_service_path(@content_service),
              class: 'btn btn-danger',
              method: 'delete',
              disabled: (@content_service.key == 'test'),
              data: { confirm: 'Are you sure you want to delete this content service? This cannot be undone.' }) do
      %i.fas.fa-trash
      Delete

%h1= @content_service.name
.row
  .col-sm-4
    %dl
      %dt URI
      %dd= @content_service.uri.present? ? link_to(@content_service.uri, @content_service.uri) : 'None'
      %dt Key
      %dd
        %code= @content_service.key
      %dt Items
      %dd= number_with_delimiter(@content_service.num_items)
      - if @harvests.any?
        %dt
          Last #{Admin::ContentServicesController::HARVEST_WINDOW_SIZE} Harvests
        %dd
          %ol
            - @harvests.each do |harvest|
              %li
                = link_to(local_time(harvest.updated_at), admin_harvest_path(harvest))
                = harvest_status_badge(harvest.status)
  .col-sm-8
    - if current_user.medusa_admin?
      = button_bar({ label: 'Clear Element Mappings',                             |
        icon: 'fa-times',                                                         |
        url: admin_content_service_clear_element_mappings_path(@content_service), |
        method: 'delete',                                                         |
        class: 'btn-danger btn-sm',                                               |
        confirm: 'Are you sure you want to clear the element mappings?' })        |
    %h2 Elements
    %table.table.table-striped
      %tr
        %th
        %th
          Source Element
          %br/
          %span.text-muted (autodetected during indexing)
        %th= link_to 'Local Element', admin_element_defs_path, target: '_blank'
        %th Local Element Data Type
        %th Local Element Usages (TSV)
      - @content_service.element_mappings.order(:source_name).each do |mapping|
        %tr
          %td
            - if current_user.medusa_admin?
              = link_to(admin_content_service_element_mapping_path(@content_service, mapping),
                class: 'btn btn-danger btn-sm',
                method: :delete,
                data: { confirm: 'Are you sure you want to delete this element mapping?' }) do
                %i.fas.fa-times
                Remove
          %td
            %code= mapping.source_name
          %td= mapping.element_def&.label
          %td= ElementDef::DataType::to_s(mapping.element_def&.data_type)
          %td
            - element = mapping.element_def
            - if element
              - num_usages = element.num_usages(@content_service)
              - if num_usages > 0
                = link_to(number_with_delimiter(num_usages),
                          admin_element_def_usages_path(element,
                          content_service_key: @content_service.key))

= render partial: 'harvest_modal',
         locals: { content_service: @content_service }
